{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RS\\\\Desktop\\\\forGitHub\\\\Expense_Tracker\\\\Expense_Tracker_Firebase\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm/ExpenseForm\";\nimport ExpenseInfo from \"./components/ExpenseInfo/ExpenseInfo\";\nimport ExpenseList from \"./components/ExpenseList/ExpenseList\";\nimport { db } from \"./firebaseInit\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [currentExpense, setCurrentExpense] = useState(null);\n  async function addExpense(expense) {\n    // Add a new document with a generated id.\n    const docRef = await addDoc(collection(db, \"expense\"), {\n      text: expense.text,\n      amount: expense.amount,\n      cratedOn: expense.id\n    });\n    setExpenses(prevState => [expense, ...prevState]);\n  }\n  ;\n  useEffect(() => {\n    async function fetchData() {\n      const snapShot = await getDocs(collection(db, \"expense\"));\n      const expense = snapShot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc\n        };\n      });\n      console.log(expense);\n    }\n    fetchData();\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      console.log(doc.id, \" => \", doc.data());\n    });\n  }, []);\n  const deleteExpense = id => {\n    window.alert(\"Do You Wanna To Delete\");\n    setExpenses(prevExpenses => {\n      return prevExpenses.filter(expense => expense.id !== id);\n    });\n  };\n  const changeExpenseToUpdate = id => {\n    console.log(id);\n    let data = expenses[id];\n    setCurrentExpense(data);\n  };\n  function editExpense(expense) {\n    console.log(expense);\n    //setCurrentExpense(null);\n    const updatedExpenses = expenses.map(exp => {\n      if (exp.id === expense.id) {\n        return expense;\n      }\n      return exp;\n    });\n    setExpenses(updatedExpenses);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainHeading\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n        addExpense: addExpense,\n        currentExpense: currentExpense,\n        setCurrentExpense: setCurrentExpense,\n        editExpense: editExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expenseContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseInfo, {\n          expenses: expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n          expenses: expenses,\n          deleteExpense: deleteExpense,\n          changeExpenseToUpdate: changeExpenseToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"keGmEciqX2QD6vYMNDYcl5K7Tms=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ExpenseForm","ExpenseInfo","ExpenseList","db","collection","addDoc","getDocs","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","expenses","setExpenses","currentExpense","setCurrentExpense","addExpense","expense","docRef","text","amount","cratedOn","id","prevState","fetchData","snapShot","docs","map","doc","console","log","querySnapshot","forEach","data","deleteExpense","window","alert","prevExpenses","filter","changeExpenseToUpdate","editExpense","updatedExpenses","exp","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RS/Desktop/forGitHub/Expense_Tracker/Expense_Tracker_Firebase/src/App.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm/ExpenseForm\";\nimport ExpenseInfo from \"./components/ExpenseInfo/ExpenseInfo\";\nimport ExpenseList from \"./components/ExpenseList/ExpenseList\";\nimport { db } from \"./firebaseInit\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n\nimport \"./App.css\";\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState([]);\n\n  const [currentExpense,setCurrentExpense] = useState(null)\n\n    async function addExpense(expense) {\n\n    // Add a new document with a generated id.\n    const docRef = await addDoc(collection(db, \"expense\"), {\n    text: expense.text,\n    amount: expense.amount,\n    cratedOn    : expense.id\n    });\n    \n    setExpenses((prevState) => [expense, ...prevState]);\n  };\n\n  useEffect(()=>{\n\n    async function fetchData(){\n\n      const snapShot = await getDocs(collection(db, \"expense\"));\n\n      const expense = snapShot.docs.map((doc) =>{\n\n        return{\n          id : doc.id,\n          ...doc\n        }\n      })\n\n      console.log(expense);\n    }\n\n    fetchData();\n\n          \n          querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          });\n  }, [])\n\n  const deleteExpense = (id) => {\n    window.alert(\"Do You Wanna To Delete\");\n    setExpenses((prevExpenses) => {\n      return prevExpenses.filter((expense) => expense.id !== id);\n    });\n  };\n\n  const changeExpenseToUpdate = (id) =>{\n    console.log(id);\n    let data = expenses[id];\n    setCurrentExpense(data)\n  }\n\n   function editExpense (expense){\n    console.log(expense)\n    //setCurrentExpense(null);\n    const updatedExpenses=expenses.map(exp=>{\n      if(exp.id === expense.id){\n        return expense\n      }\n      return exp;\n    })\n    setExpenses(updatedExpenses)\n\n  }\n\n  return (\n    <>\n      <h2 className=\"mainHeading\">Expense Tracker</h2>\n      <div className=\"App\">\n        <ExpenseForm addExpense={addExpense} currentExpense={currentExpense} setCurrentExpense={setCurrentExpense} editExpense={editExpense}/>\n        <div className=\"expenseContainer\">\n          <ExpenseInfo expenses={expenses} />\n          <ExpenseList expenses={expenses} deleteExpense={deleteExpense} changeExpenseToUpdate = {changeExpenseToUpdate } />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}